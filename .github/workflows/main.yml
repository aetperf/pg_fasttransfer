name: Build Windows DLL

on:
  push:
    tags:
      - "v*"

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup MSVC Build Tools
        uses: ilammy/msvc-dev-cmd@v1

      - name: Download PostgreSQL binaries
        run: |
          curl -L -o pgsql.zip https://get.enterprisedb.com/postgresql/postgresql-15.4-1-windows-x64-binaries.zip
          mkdir pgsql
          tar -xf pgsql.zip -C pgsql --strip-components=1

      - name: Add pgsql/bin to PATH
        run: echo "${{ github.workspace }}\pgsql\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Compile pg_fasttransfer
        shell: pwsh
        run: |
          $ROOT = "${{ github.workspace }}"
          $I = Join-Path $ROOT "pgsql\include"
          $S = Join-Path $ROOT "pgsql\include\server"
          $L = Join-Path $ROOT "pgsql\lib"

          & cl.exe /LD /Fe:pg_fasttransfer.dll pg_fasttransfer.c `
            /I"$ROOT" `
            /I"$I" `
            /I"$S" `
            /link /LIBPATH:"$L" postgres.lib ws2_32.lib

      - name: Prepare release package
        shell: pwsh
        run: |
          $releaseDir = Join-Path $env:GITHUB_WORKSPACE "release"
          if (-Not (Test-Path $releaseDir)) { New-Item -ItemType Directory -Path $releaseDir }

          # Copier les fichiers
          Copy-Item "$env:GITHUB_WORKSPACE\pg_fasttransfer.dll" $releaseDir
          Copy-Item "$env:GITHUB_WORKSPACE\pg_fasttransfer.control" $releaseDir
          Copy-Item "$env:GITHUB_WORKSPACE\pg_fasttransfer--1.0.sql" $releaseDir

          # ZIP principal (tous les fichiers du release)
          $mainZip = Join-Path $env:GITHUB_WORKSPACE "pg_fasttransfer-windows.zip"
          if (Test-Path $mainZip) { Remove-Item $mainZip }
          Compress-Archive -Path "$releaseDir\*" -DestinationPath $mainZip -Force

          # ZIP avec seulement les 3 fichiers
          $threeFilesZip = Join-Path $env:GITHUB_WORKSPACE "pg_fasttransfer-threefiles.zip"
          if (Test-Path $threeFilesZip) { Remove-Item $threeFilesZip }
          Compress-Archive -Path "$releaseDir\*" -DestinationPath $threeFilesZip -Force

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload main ZIP
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: pg_fasttransfer-windows.zip
          asset_name: pg_fasttransfer-windows.zip
          asset_content_type: application/zip

      
