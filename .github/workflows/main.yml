name: Build Windows DLL

on:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      # 1. Récupérer le code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurer MSVC pour compiler
      - name: Setup MSVC Build Tools
        uses: ilammy/msvc-dev-cmd@v1

      # 3. Télécharger PostgreSQL binaries
      - name: Download PostgreSQL binaries
        run: |
          curl -L -o pgsql.zip https://get.enterprisedb.com/postgresql/postgresql-15.4-1-windows-x64-binaries.zip
          mkdir pgsql
          tar -xf pgsql.zip -C pgsql --strip-components=1

      # 4. Ajouter pgsql/bin au PATH
      - name: Add pgsql/bin to PATH
        run: echo "${{ github.workspace }}\pgsql\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      # 5. Vérifier pg_config
      - name: Check pg_config
        run: pg_config --version

      # 6. Compiler la DLL
      - name: Compile pg_fasttransfer
        shell: pwsh
        run: |
          $I = "${{ github.workspace }}\pgsql\include"
          $S = "${{ github.workspace }}\pgsql\include\server"
          $L = "${{ github.workspace }}\pgsql\lib"

          cl /LD /Fe:pg_fasttransfer.dll pg_fasttransfer.c /I"$I" /I"$S" /link /LIBPATH:"$L" postgres.lib ws2_32.lib

      # 7. Préparer le package minimal
      - name: Prepare release package
        run: |
          mkdir release
          copy pg_fasttransfer.dll release\
          copy pg_fasttransfer.control release\
          copy pg_fasttransfer--1.0.sql release\

      # 8. Uploader l’artefact minimal
      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: pg_fasttransfer-windows
          path: release/*
